[{"C:\\Users\\AMC\\IdeaProjects\\pictopdf\\pictopdf-frontend\\src\\index.js":"1","C:\\Users\\AMC\\IdeaProjects\\pictopdf\\pictopdf-frontend\\src\\App.js":"2","C:\\Users\\AMC\\IdeaProjects\\pictopdf\\pictopdf-frontend\\src\\reportWebVitals.js":"3","C:\\Users\\AMC\\IdeaProjects\\pictopdf\\pictopdf-frontend\\src\\Components\\PdfDrop.jsx":"4","C:\\Users\\AMC\\IdeaProjects\\pictopdf\\pictopdf-frontend\\src\\Config\\Api.js":"5","C:\\Users\\AMC\\IdeaProjects\\pictopdf\\pictopdf-frontend\\src\\Config\\env.js":"6","C:\\Users\\AMC\\IdeaProjects\\pictopdf\\pictopdf-frontend\\src\\Router\\Router.jsx":"7","C:\\Users\\AMC\\IdeaProjects\\pictopdf\\pictopdf-frontend\\src\\Pages\\PdfPage.jsx":"8","C:\\Users\\AMC\\IdeaProjects\\pictopdf\\pictopdf-frontend\\src\\Pages\\EpubPage.jsx":"9","C:\\Users\\AMC\\IdeaProjects\\pictopdf\\pictopdf-frontend\\src\\Pages\\HomePage.jsx":"10","C:\\Users\\AMC\\IdeaProjects\\pictopdf\\pictopdf-frontend\\src\\Components\\Nav.jsx":"11","C:\\Users\\AMC\\IdeaProjects\\pictopdf\\pictopdf-frontend\\src\\Components\\Drop.jsx":"12","C:\\Users\\AMC\\IdeaProjects\\pictopdf\\pictopdf-frontend\\src\\Components\\FileDisplay.jsx":"13"},{"size":500,"mtime":499162500000,"results":"14","hashOfConfig":"15"},{"size":1119,"mtime":1611376521428,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":3999,"mtime":1611114642184,"results":"18","hashOfConfig":"19"},{"size":560,"mtime":1611433206769,"results":"20","hashOfConfig":"15"},{"size":52,"mtime":1611374651075,"results":"21","hashOfConfig":"15"},{"size":630,"mtime":1610775075211,"results":"22","hashOfConfig":"15"},{"size":264,"mtime":1611203138793,"results":"23","hashOfConfig":"15"},{"size":268,"mtime":1611203138803,"results":"24","hashOfConfig":"15"},{"size":166,"mtime":1610943277661,"results":"25","hashOfConfig":"15"},{"size":690,"mtime":1611011574874,"results":"26","hashOfConfig":"15"},{"size":5750,"mtime":1611433257438,"results":"27","hashOfConfig":"15"},{"size":1591,"mtime":1611419520313,"results":"28","hashOfConfig":"15"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"1vh8fv9",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"131dh38",{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"31"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"31"},"C:\\Users\\AMC\\IdeaProjects\\pictopdf\\pictopdf-frontend\\src\\index.js",[],["60","61"],"C:\\Users\\AMC\\IdeaProjects\\pictopdf\\pictopdf-frontend\\src\\App.js",[],"C:\\Users\\AMC\\IdeaProjects\\pictopdf\\pictopdf-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\AMC\\IdeaProjects\\pictopdf\\pictopdf-frontend\\src\\Components\\PdfDrop.jsx",["62","63"],"import React, {useCallback, useState} from 'react'\r\nimport Dropzone from 'react-dropzone'\r\nimport  {Container, Row, Col, Button} from 'react-bootstrap'\r\nimport \"../Style/drop.css\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {postFile, postPicture} from '../Config/Api'\r\n\r\nfunction PdfDrop(props) {\r\n\r\n    const [btn, setBtn] = useState();\r\n\r\n    const onDrop = useCallback((acceptedFiles) =>{\r\n        acceptedFiles.forEach((file) =>{\r\n            const reader = new FileReader()\r\n\r\n            reader.onabort = () => console.log(\"Aborting file reading.\")\r\n            reader.onerror = () => console.log(\"Error while reading file\")\r\n            reader.onload = () => {\r\n                const binaryStr = reader.result;\r\n                postFile(file)\r\n                    .then((res) =>{\r\n                        const url = window.URL.createObjectURL(new Blob([res.data]));\r\n                        if(btn !== undefined){\r\n                            setBtn(undefined);\r\n                        }\r\n                        setBtn(\r\n                            <a\r\n                                style={{\r\n                                    backgroundColor: \"#c6fc03\",\r\n                                    marginTop: \"20px\"\r\n                                }}\r\n                                className={\"btn shadow\"}\r\n                                href={url}\r\n                                download={`${file.name.split(\".\")[0]}.epub`}\r\n                                data-aos={\"zoom-in-up\"}\r\n                                data-aos-duration={1000}\r\n                            >\r\n                                <strong>Download</strong>\r\n                            </a>\r\n                        )\r\n                        // link.click();\r\n                })\r\n\r\n            }\r\n\r\n            reader.readAsArrayBuffer(file);\r\n        })\r\n    }, [btn])\r\n\r\n    return (\r\n        <div style={{\r\n            paddingTop: \"25%\"\r\n        }}>\r\n            <Container style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\"\r\n            }} >\r\n                <Row>\r\n                    <Col className={\"shadow\"} style={{\r\n                        padding: \"0\",\r\n                        borderRadius: \"5px\"\r\n                    }}>\r\n                        <Dropzone onDrop={onDrop} >\r\n                            {({getRootProps, getInputProps}) => (\r\n                                <section>\r\n                                    <div {...getRootProps()} className=\"drop-box\" >\r\n                                        <input {...getInputProps()} />\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <Button variant=\"warning\" className=\"input-button\" >\r\n                                                    Click here\r\n                                                </Button>\r\n                                            </Col>\r\n\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <p className=\"drop-text\">\r\n                                                    Or drag and drop a file\r\n                                                </p>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </div>\r\n                                </section>\r\n                            )}\r\n                        </Dropzone>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n            <Container style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\"\r\n            }}>\r\n                <Row>\r\n                    <Col>\r\n                        {btn}\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default PdfDrop;\r\n",["64","65"],"C:\\Users\\AMC\\IdeaProjects\\pictopdf\\pictopdf-frontend\\src\\Config\\Api.js",["66"],"C:\\Users\\AMC\\IdeaProjects\\pictopdf\\pictopdf-frontend\\src\\Config\\env.js",[],"C:\\Users\\AMC\\IdeaProjects\\pictopdf\\pictopdf-frontend\\src\\Router\\Router.jsx",[],"C:\\Users\\AMC\\IdeaProjects\\pictopdf\\pictopdf-frontend\\src\\Pages\\PdfPage.jsx",[],"C:\\Users\\AMC\\IdeaProjects\\pictopdf\\pictopdf-frontend\\src\\Pages\\EpubPage.jsx",[],"C:\\Users\\AMC\\IdeaProjects\\pictopdf\\pictopdf-frontend\\src\\Pages\\HomePage.jsx",[],"C:\\Users\\AMC\\IdeaProjects\\pictopdf\\pictopdf-frontend\\src\\Components\\Nav.jsx",["67","68","69","70"],"import React from \"react\";\r\nimport  {Nav, Button, NavDropdown, Form, Navbar, FormControl} from \"react-bootstrap\";\r\n\r\nexport default function Navbr(){\r\n    return (\r\n        <Navbar bg=\"light\" expand=\"lg\">\r\n            <Navbar.Brand href=\"/\">Konverter</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                    <Nav.Link href=\"#home\">Home</Nav.Link>\r\n                    <Nav.Link href=\"/pdf\">PDF</Nav.Link>\r\n                    <Nav.Link href=\"/epub\">ePub</Nav.Link>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n","C:\\Users\\AMC\\IdeaProjects\\pictopdf\\pictopdf-frontend\\src\\Components\\Drop.jsx",["71","72","73","74"],"C:\\Users\\AMC\\IdeaProjects\\pictopdf\\pictopdf-frontend\\src\\Components\\FileDisplay.jsx",["75"],"import React, {useState} from \"react\";\r\nimport {Col} from \"react-bootstrap\";\r\n\r\n\r\nexport default function FileDisplay(props){\r\n    // const [files, setFiles] = useState([])\r\n    // const [imgs, setImgs] = useState([])\r\n    //\r\n    // const createImages = () =>{\r\n    //     let arr = []\r\n    //     let count = 1;\r\n    //     files.forEach(img =>{\r\n    //         console.log(`for each${img}`)\r\n    //         arr.push(\r\n    //             <img\r\n    //                 src={img? URL.createObjectURL(img) : null}\r\n    //                 alt={img? img.name : null}\r\n    //                 key={count}\r\n    //             />\r\n    //         )\r\n    //         count++;\r\n    //     })\r\n    //     setImgs(arr);\r\n    // }\r\n    //\r\n    // const handleUpload = (e) =>{\r\n    //     console.log(e)\r\n    //     files.push(e.target.files[0])\r\n    //     setFiles(files);\r\n    //     createImages();\r\n    // }\r\n    //\r\n    // return (\r\n    //     <div>\r\n    //         {imgs}\r\n    //         <input type=\"file\" onChange={handleUpload}/>\r\n    //     </div>\r\n    // )\r\n    return (\r\n        <Col\r\n            style={{\r\n                borderRadius:\"5px\",\r\n                height: \"130px\",\r\n                width: \"180px\",\r\n            }}\r\n            lg={3}\r\n            md={4}\r\n            sm={4}\r\n            xs={6}\r\n        >\r\n            <img\r\n                className={\"shadow\"}\r\n                style={{\r\n                    marginTop:\"20px\"\r\n                }}\r\n                src={URL.createObjectURL(props.file)}\r\n                alt={props.file.name}\r\n            />\r\n        </Col>\r\n    )\r\n}\r\n",{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":6,"column":19,"nodeType":"82","messageId":"83","endLine":6,"endColumn":30},{"ruleId":"80","severity":1,"message":"84","line":19,"column":23,"nodeType":"82","messageId":"83","endLine":19,"endColumn":32},{"ruleId":"76","replacedBy":"85"},{"ruleId":"78","replacedBy":"86"},{"ruleId":"80","severity":1,"message":"87","line":7,"column":9,"nodeType":"82","messageId":"83","endLine":7,"endColumn":14},{"ruleId":"80","severity":1,"message":"88","line":2,"column":15,"nodeType":"82","messageId":"83","endLine":2,"endColumn":21},{"ruleId":"80","severity":1,"message":"89","line":2,"column":23,"nodeType":"82","messageId":"83","endLine":2,"endColumn":34},{"ruleId":"80","severity":1,"message":"90","line":2,"column":36,"nodeType":"82","messageId":"83","endLine":2,"endColumn":40},{"ruleId":"80","severity":1,"message":"91","line":2,"column":50,"nodeType":"82","messageId":"83","endLine":2,"endColumn":61},{"ruleId":"80","severity":1,"message":"92","line":6,"column":9,"nodeType":"82","messageId":"83","endLine":6,"endColumn":17},{"ruleId":"80","severity":1,"message":"93","line":8,"column":9,"nodeType":"82","messageId":"83","endLine":8,"endColumn":25},{"ruleId":"80","severity":1,"message":"94","line":12,"column":17,"nodeType":"82","messageId":"83","endLine":12,"endColumn":23},{"ruleId":"95","severity":1,"message":"96","line":76,"column":8,"nodeType":"97","endLine":76,"endColumn":10,"suggestions":"98"},{"ruleId":"80","severity":1,"message":"99","line":1,"column":16,"nodeType":"82","messageId":"83","endLine":1,"endColumn":24},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"no-unused-vars","'postPicture' is defined but never used.","Identifier","unusedVar","'binaryStr' is assigned a value but never used.",["100"],["101"],"'count' is assigned a value but never used.","'Button' is defined but never used.","'NavDropdown' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","'postFile' is defined but never used.","'useMonitorOutput' is defined but never used.","'setBtn' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'fileArr', 'fileDisplay', and 'files'. Either include them or remove the dependency array. You can also do a functional update 'setFileDisplay(f => ...)' if you only need 'fileDisplay' in the 'setFileDisplay' call.","ArrayExpression",["102"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},"Update the dependencies array to be: [fileArr, fileDisplay, files]",{"range":"105","text":"106"},[2727,2729],"[fileArr, fileDisplay, files]"]